import { useState, useEffect } from "react";
import { useSelector, useDispatch } from "react-redux";
import { useNavigate, Link } from "react-router-dom";
import axios from "axios";
import { logout } from "../redux/authSlice";
import {
  Home,
  CalendarDays,
  BookOpen,
  Users,
  BarChart3,
  LogOut,
} from "lucide-react";

const AdminDashboard = () => {
  const user = useSelector((state) => state.auth.user);
  const dispatch = useDispatch();
  const navigate = useNavigate();

  const [events, setEvents] = useState([]);
  const [filteredEvents, setFilteredEvents] = useState([]);
  const [eventName, setEventName] = useState("");
  const [eventDate, setEventDate] = useState("");

  // Fetch events
  useEffect(() => {
    const fetchEvents = async () => {
      const res = await axios.get("http://localhost:5000/api/events"); // Your API
      setEvents(res.data);
      setFilteredEvents(res.data);
    };
    fetchEvents();
  }, []);

  // Logout
  const handleLogout = () => {
    dispatch(logout());
    navigate("/login");
  };

  // Filter events
  const handleFilter = () => {
    const filtered = events.filter((event) => {
      const matchesName = event.name
        .toLowerCase()
        .includes(eventName.toLowerCase());
      const matchesDate = eventDate
        ? event.date.slice(0, 10) === eventDate
        : true;
      return matchesName && matchesDate;
    });
    setFilteredEvents(filtered);
  };

  const clearFilters = () => {
    setEventName("");
    setEventDate("");
    setFilteredEvents(events);
  };

  return (
    <div className="flex min-h-screen">
      {/* Sidebar */}
      <div className="w-64 h-screen bg-gray-100 p-4 shadow-lg">
        <h2 className="text-2xl font-bold text-red-600 mb-4">
          Krish Event Management
        </h2>
        <p
          className="text-gray-700 
        font-bold
        mb-8"
        >
          {user?.name || "Admin"}
        </p>
        <ul className="space-y-4">
          <li>
            <Link
              to="/admin/dashboard"
              className="flex items-center gap-2 
           text-red-600
          hover:bg-red-600 hover:text-amber-50 p-2
          "
            >
              <Home /> Home
            </Link>
          </li>
          <li>
            <Link
              to="/admin/events"
              className="flex items-center gap-2
           text-black
          hover:bg-red-600 hover:text-amber-50 p-2
          "
            >
              <CalendarDays /> Events
            </Link>
          </li>
          <li>
            <Link
              to="/admin/bookings"
              className="flex items-center gap-2
           text-black
          hover:bg-red-600 hover:text-amber-50 p-2
          "
            >
              <BookOpen /> Bookings
            </Link>
          </li>
          <li>
            <Link
              to="/admin/users"
              className="flex items-center gap-2
           text-black
          hover:bg-red-600 hover:text-amber-50 p-2
          "
            >
              <Users /> Users
            </Link>
          </li>
          <li>
            <Link
              to="/admin/reports"
              className="flex items-center gap-2
          text-black
          hover:bg-red-600 hover:text-amber-50 p-2 "
            >
              <BarChart3 /> Reports
            </Link>
          </li>
          <li>
            <button
              onClick={handleLogout}
              className="flex items-center gap-2 text-black
          hover:bg-red-600 hover:text-amber-50 p-2 cursor-pointer"
            >
              <LogOut /> Logout
            </button>
          </li>
        </ul>
      </div>

      {/* Main content */}
      <div className="flex-1 p-6 bg-gray-50">
        <h2 className="text-2xl font-bold mb-4">
          Welcome, {user?.name || "Admin"}!!!
        </h2>

        {/* Filter controls */}
        <div className="flex gap-4 mb-6">
          <input
            type="text"
            placeholder="Event Name"
            value={eventName}
            onChange={(e) => setEventName(e.target.value)}
            className="border p-2 rounded w-1/3"
          />
          <input
            type="date"
            value={eventDate}
            onChange={(e) => setEventDate(e.target.value)}
            className="border p-2 rounded w-1/3"
          />
          <button
            onClick={clearFilters}
            className="bg-gray-300 px-4 py-2 rounded"
          >
            Clear Filters
          </button>
          <button
            onClick={handleFilter}
            className="bg-black text-white px-4 py-2 rounded"
          >
            Apply Filters
          </button>
        </div>

        {/* Events display */}
        <div className="space-y-4">
          {filteredEvents.length > 0 ? (
            filteredEvents.map((event) => (
              <div key={event._id} className="bg-white rounded shadow p-4">
                <h3 className="font-bold text-lg mb-2">{event.name}</h3>
                <div className="flex flex-col md:flex-row gap-4 items-start">
                  {/* Image section */}
                  <img
                    src={event.image}
                    alt={event.name}
                    className="w-40 h-40 object-cover"
                  />

                  {/* Details section */}
                  <div className="flex flex-col justify-between">
                    <div>
                      <p className="text-sm text-gray-500 mt-3">
                        üìÖ {new Date(event.date).toLocaleDateString("en-GB")} |
                        üìç {event.location}
                      </p>
                      <p className="mt-2">{event.description}</p>
                    </div>
                    <div className="mt-4">
                      <Link to={/events/${event._id}}>
                        <button className="bg-black text-white px-4 py-2 rounded hover:bg-gray-800 transition">
                          View Details
                        </button>
                      </Link>
                    </div>
                  </div>
                </div>
              </div>
            ))
          ) : (
            <p>No events found.</p>
          )}
        </div>
      </div>
    </div>
  );
};

export default AdminDashboard;

i want same code for userDashboard page with some changes like i want only home, profile, booking, loutout inside the profile page name, email id, role and edit button should be visible, and inside the booking page what ever booked the event should be filled inside the booking page and logout should be logout the page it should be not navigate page instead it should be good logout 